name: Build and Release

on:
  push:
    # branches:
    #   - release   # リリースブランチに対するpush時にのみ実行
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build binaries
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        BINARY_NAME="myapp-${{ matrix.goos }}-${{ matrix.goarch }}"
        if [ "${{ matrix.goos }}" = "windows" ]; then
          BINARY_NAME="${BINARY_NAME}.exe"
        fi
        go build -v -o "$BINARY_NAME" .

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.goos }}-${{ matrix.goarch }}
        path: "myapp-${{ matrix.goos }}-${{ matrix.goarch }}*"

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      run: |
        for file in ./artifacts/*/*; do
          echo "Uploading $file"
          gh release upload ${{ steps.create_release.outputs.id }} "$file" --repo ${{ github.repository }}
        done